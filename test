import yaml
import sys

def sort_dict_recursively(obj):
    if isinstance(obj, dict):
        return dict(sorted((k, sort_dict_recursively(v)) for k, v in obj.items()))
    elif isinstance(obj, list):
        return [sort_dict_recursively(i) for i in obj]
    else:
        return obj

def load_clean_yaml(filepath):
    with open(filepath, 'r') as f:
        return yaml.safe_load(f)

def dump_clean_yaml(data, filepath):
    with open(filepath, 'w') as f:
        yaml.dump(data, f, sort_keys=False, default_flow_style=False)

def main(input_file, output_file):
    raw = load_clean_yaml(input_file)
    sorted_yaml = sort_dict_recursively(raw)
    dump_clean_yaml(sorted_yaml, output_file)
    print(f"âœ… Cleaned and sorted YAML written to: {output_file}")

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python sort_yaml_clean.py <input.yaml> <output.yaml>")
        sys.exit(1)

    main(sys.argv[1], sys.argv[2])
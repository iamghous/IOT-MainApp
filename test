import requests
import json

def upload_manifest(url, public_key, private_key, file_path="manifest.json"):
    """
    Uploads a manifest JSON file to MongoDB Ops Manager via an HTTP PUT request.
    
    Parameters:
    - url (str): The API endpoint for uploading the manifest.
    - public_key (str): The public API key for authentication.
    - private_key (str): The private API key for authentication.
    - file_path (str): The path to the manifest JSON file (default is 'manifest.json').

    Returns:
    - dict: JSON response from the server if successful.
    - str: Error message if the request fails.
    """
    try:
        # Read the JSON file
        with open(file_path, "r") as file:
            manifest_data = file.read()
        
        # Headers
        headers = {
            "Accept": "application/json",
            "Content-Type": "application/json"
        }

        # Authentication (Basic Auth)
        auth = (public_key, private_key)

        # Send HTTP PUT request
        response = requests.put(url, headers=headers, data=manifest_data, auth=auth)

        # Check response status
        if response.status_code == 200:
            return response.json()  # Return JSON response if successful
        else:
            return f"Error: {response.status_code} - {response.text}"

    except FileNotFoundError:
        return "Error: Manifest file not found. Please check the file path."
    except requests.RequestException as e:
        return f"Request failed: {e}"